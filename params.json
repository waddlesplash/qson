{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Fast and simple JSON manipulation in Qt.","name":"Qt Fast JSON","body":"##What's this?\r\nA fast way to manipulate [JSON](http://www.json.org/) data from [Qt](http://qt-project.org/) under the [MIT license](https://github.com/waddlesplash/qtfastjson/blob/master/LICENSE.txt).\r\nCurrently, it only *reads* JSON.\r\n\r\n##Why is this any better than [QJson](http://qjson.sourceforge.net/)?\r\nBecause QJson's parser is about 1,700 lines of code (including ~1,100 lines of [Bison](http://www.gnu.org/software/bison/)-generated code).\r\n\r\nMine is just about 260 lines of code, created by hand.\r\n\r\n##Is the API different?\r\nYes it is, but not by much. To read the following JSON...\r\n```json\r\n{\r\n\"encoding\" : \"UTF-8\",\r\n\"plug-ins\" : [\r\n\t\"python\",\r\n\t\"c++\",\r\n\t\"ruby\"\r\n\t],\r\n\"indent\" : { \"length\" : 3, \"use_space\" : true }\r\n}\r\n```\r\n...while using QJson, you would have to do something like this at the least:\r\n```cpp\r\nQJson::Parser parser;\r\nbool* ok;\r\nQVariantMap result = parser.parse(\"{ ...jsondata... }\", &ok).toMap();\r\nint length = result[\"indent\"].toMap()[\"length\"].toInt();\r\n```\r\nbut if you use QtFastJson you only have to do the following:\r\n```cpp\r\nQtFastJsonDoc* jsonDoc = new QtFastJsonDoc();\r\njsonDoc->readFile(\"json_file.json\",true);\r\nint length = jsonDoc->at(\"indent\")->at(\"length\")->toInt();\r\n```\r\n\r\n","google":""}